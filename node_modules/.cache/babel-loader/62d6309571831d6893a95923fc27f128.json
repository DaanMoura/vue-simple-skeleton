{"remainingRequest":"/home/alan/projects/mercado/vencimento/app/node_modules/babel-loader/lib/index.js!/home/alan/projects/mercado/vencimento/app/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/alan/projects/mercado/vencimento/app/src/services/Storage.js","dependencies":[{"path":"/home/alan/projects/mercado/vencimento/app/src/services/Storage.js","mtime":1586521621814},{"path":"/home/alan/projects/mercado/vencimento/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alan/projects/mercado/vencimento/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alan/projects/mercado/vencimento/app/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default class Storage {\n  static parse(val, isSet) {\n    if (isSet) return JSON.stringify(val);\n    return val == 'undefined' || val == 'null' ? null : JSON.parse(val);\n  }\n\n  static has(key) {\n    return !!Storage.parse(window.localStorage.getItem(key));\n  }\n\n  static get(key) {\n    return new Promise((resolve, reject) => {\n      try {\n        Storage.parse(window.localStorage.getItem(key));\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n\n      ;\n    });\n  }\n\n  static set(key, value) {\n    return new Promise((resolve, reject) => {\n      try {\n        window.localStorage.setItem(key, Storage.parse(value, true));\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n\n      ;\n    });\n  }\n\n  static clear(key) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (key) {\n          window.localStorage.removeItem(key);\n        } else {\n          window.localStorage.clear();\n        }\n\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n\n      ;\n    });\n  }\n\n}",{"version":3,"sources":["/home/alan/projects/mercado/vencimento/app/src/services/Storage.js"],"names":["Storage","parse","val","isSet","JSON","stringify","has","key","window","localStorage","getItem","get","Promise","resolve","reject","err","set","value","setItem","clear","removeItem"],"mappings":"AAAA,eAAe,MAAMA,OAAN,CAAc;AAEzB,SAAOC,KAAP,CAAaC,GAAb,EAAkBC,KAAlB,EAAyB;AACrB,QAAIA,KAAJ,EAAW,OAAOC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAP;AACX,WAAOA,GAAG,IAAI,WAAP,IAAsBA,GAAG,IAAI,MAA7B,GAAsC,IAAtC,GAA6CE,IAAI,CAACH,KAAL,CAAWC,GAAX,CAApD;AACH;;AAED,SAAOI,GAAP,CAAWC,GAAX,EAAgB;AACZ,WAAO,CAAC,CAACP,OAAO,CAACC,KAAR,CAAcO,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,GAA5B,CAAd,CAAT;AACH;;AACD,SAAOI,GAAP,CAAWJ,GAAX,EAAgB;AACZ,WAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI;AACAd,QAAAA,OAAO,CAACC,KAAR,CAAcO,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,GAA5B,CAAd;AACAM,QAAAA,OAAO;AACV,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVD,QAAAA,MAAM,CAACC,GAAD,CAAN;AACH;;AAAA;AACJ,KAPM,CAAP;AAQH;;AAED,SAAOC,GAAP,CAAWT,GAAX,EAAgBU,KAAhB,EAAuB;AACnB,WAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI;AACAN,QAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4BX,GAA5B,EAAiCP,OAAO,CAACC,KAAR,CAAcgB,KAAd,EAAqB,IAArB,CAAjC;AACAJ,QAAAA,OAAO;AACV,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVD,QAAAA,MAAM,CAACC,GAAD,CAAN;AACH;;AAAA;AACJ,KAPM,CAAP;AAQH;;AAED,SAAOI,KAAP,CAAaZ,GAAb,EAAkB;AACd,WAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI;AACA,YAAIP,GAAJ,EAAS;AACLC,UAAAA,MAAM,CAACC,YAAP,CAAoBW,UAApB,CAA+Bb,GAA/B;AACH,SAFD,MAEO;AACHC,UAAAA,MAAM,CAACC,YAAP,CAAoBU,KAApB;AACH;;AACDN,QAAAA,OAAO;AACV,OAPD,CAOE,OAAOE,GAAP,EAAY;AACVD,QAAAA,MAAM,CAACC,GAAD,CAAN;AACH;;AAAA;AACJ,KAXM,CAAP;AAYH;;AA7CwB","sourcesContent":["export default class Storage {\n\n    static parse(val, isSet) {\n        if (isSet) return JSON.stringify(val);\n        return val == 'undefined' || val == 'null' ? null : JSON.parse(val);\n    }\n\n    static has(key) {\n        return !!Storage.parse(window.localStorage.getItem(key));\n    }\n    static get(key) {\n        return new Promise((resolve, reject) => {\n            try {\n                Storage.parse(window.localStorage.getItem(key));\n                resolve();\n            } catch (err) {\n                reject(err);\n            };\n        });        \n    }\n\n    static set(key, value) {\n        return new Promise((resolve, reject) => {\n            try {\n                window.localStorage.setItem(key, Storage.parse(value, true));\n                resolve();\n            } catch (err) {\n                reject(err);\n            };\n        });  \n    }\n\n    static clear(key) {\n        return new Promise((resolve, reject) => {\n            try {                \n                if (key) {\n                    window.localStorage.removeItem(key);\n                } else {\n                    window.localStorage.clear();\n                }\n                resolve();\n            } catch (err) {\n                reject(err);\n            };\n        }); \n    }\n}"]}]}