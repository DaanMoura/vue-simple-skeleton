{"remainingRequest":"/home/alan/projects/abs/skeleton/app/node_modules/babel-loader/lib/index.js!/home/alan/projects/abs/skeleton/app/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/alan/projects/abs/skeleton/app/src/services/ApiRequest.js","dependencies":[{"path":"/home/alan/projects/abs/skeleton/app/src/services/ApiRequest.js","mtime":1586742952000},{"path":"/home/alan/projects/abs/skeleton/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alan/projects/abs/skeleton/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alan/projects/abs/skeleton/app/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/alan/projects/abs/skeleton/app/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alan/projects/abs/skeleton/app/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Request from '@schirrel/request/Request.js';\n\nvar APIRequest =\n/*#__PURE__*/\nfunction () {\n  function APIRequest(uri) {\n    _classCallCheck(this, APIRequest);\n\n    this.uri = uri;\n  }\n  /**\n   * @param {String} id\n   * @returns {Function} Promise\n   */\n\n\n  _createClass(APIRequest, [{\n    key: \"get\",\n    value: function get(id) {\n      return Request.get(this.uri + '/' + id);\n    }\n    /**\n     * @returns {Function} Promise\n     */\n\n  }, {\n    key: \"all\",\n    value: function all() {\n      return Request.get(this.uri);\n    }\n    /**\n    * @param {Object} model\n    * @returns {Function} Promise\n    */\n\n  }, {\n    key: \"save\",\n    value: function save(model) {\n      if (model.id) {\n        return Request.put(this.uri + '/' + id, {\n          body: JSON.stringify(model)\n        });\n      } else return Request.post(this.uri, {\n        body: JSON.stringify(model)\n      });\n    }\n    /**\n     * \n     * @param {Object} params \n     * @returns Promise\n     */\n\n  }, {\n    key: \"pagination\",\n    value: function pagination(params) {\n      return Request.get(this.uri + '/pagination', params);\n    }\n    /**\n     * \n     * @param {Object} params \n     * @returns Promise\n     */\n\n  }, {\n    key: \"search\",\n    value: function search(params) {\n      return Request.get(this.uri + '/search', params);\n    }\n  }]);\n\n  return APIRequest;\n}();\n\nexport { APIRequest as default };",{"version":3,"sources":["/home/alan/projects/abs/skeleton/app/src/services/ApiRequest.js"],"names":["Request","APIRequest","uri","id","get","model","put","body","JSON","stringify","post","params"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,8BAApB;;IAEqBC,U;;;AAEjB,sBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;AAEL;;;;;;;;wBAIQC,E,EAAI;AACJ,aAAOH,OAAO,CAACI,GAAR,CAAY,KAAKF,GAAL,GAAW,GAAX,GAAiBC,EAA7B,CAAP;AACH;AACL;;;;;;0BAGU;AACF,aAAOH,OAAO,CAACI,GAAR,CAAY,KAAKF,GAAjB,CAAP;AACH;AACD;;;;;;;yBAKKG,K,EAAO;AACR,UAAIA,KAAK,CAACF,EAAV,EAAc;AACV,eAAOH,OAAO,CAACM,GAAR,CAAY,KAAKJ,GAAL,GAAU,GAAV,GAAgBC,EAA5B,EAAgC;AAACI,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAAP,SAAhC,CAAP;AACH,OAFD,MAGA,OAAOL,OAAO,CAACU,IAAR,CAAa,KAAKR,GAAlB,EAAuB;AAACK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAAP,OAAvB,CAAP;AACH;AACD;;;;;;;;+BAKWM,M,EAAQ;AACf,aAAOX,OAAO,CAACI,GAAR,CAAY,KAAKF,GAAL,GAAS,aAArB,EAAmCS,MAAnC,CAAP;AACH;AACD;;;;;;;;2BAKOA,M,EAAQ;AACX,aAAOX,OAAO,CAACI,GAAR,CAAY,KAAKF,GAAL,GAAS,SAArB,EAAgCS,MAAhC,CAAP;AACH;;;;;;SA7CgBV,U","sourcesContent":["import Request from '@schirrel/request/Request.js';\n\nexport default class APIRequest {\n\n    constructor(uri) {\n        this.uri = uri;\n    }\n\n/**\n * @param {String} id\n * @returns {Function} Promise\n */\n    get(id) {\n        return Request.get(this.uri + '/' + id);\n    }\n/**\n * @returns {Function} Promise\n */\n    all() {\n        return Request.get(this.uri);  \n    }\n    /**\n * @param {Object} model\n * @returns {Function} Promise\n */\n\n    save(model) {\n        if (model.id) {\n            return Request.put(this.uri+ '/' + id, {body: JSON.stringify(model) });\n        }else \n        return Request.post(this.uri, {body: JSON.stringify(model) });\n    }\n    /**\n     * \n     * @param {Object} params \n     * @returns Promise\n     */\n    pagination(params) {\n        return Request.get(this.uri+'/pagination',params);\n    }\n    /**\n     * \n     * @param {Object} params \n     * @returns Promise\n     */\n    search(params) {\n        return Request.get(this.uri+'/search', params);\n    }\n}"]}]}